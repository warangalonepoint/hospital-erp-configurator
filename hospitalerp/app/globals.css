@tailwind base;
@tailwind components;
@tailwind utilities;

/* ---------- Theme tokens (dark+light) ---------- */
:root.theme-dark {
  --bg: #0b0b10;
  --card: #14141d;
  --line: #1f1f29;
  --mut: #a1a1aa;
  --prim: #0ea5e9;
  --text: #fafafa;
  --text-muted: #a1a1aa;
  --field: #0f0f16;
}
:root.theme-light {
  --bg: #fafafa;
  --card: #ffffff;
  --line: #e5e7eb;
  --mut: #6b7280;
  --prim: #0ea5e9;
  --text: #0b1220;
  --text-muted: #475569;
  --field: #ffffff;
}

/* ---------- Base ---------- */
html, body { height: 100%; }
body {
  background: var(--bg);
  color: var(--text);
  font-family: system-ui, Segoe UI, Roboto, sans-serif;
}

/* Links */
a { color: #38bdf8; text-decoration: none; }
a:hover { text-decoration: underline; }

/* ---------- Forms (works in iframe shell too) ---------- */
input, select, textarea, button {
  font-family: inherit;
  font-size: 14px;
  border-radius: 0.5rem;
  border: 1px solid var(--line);
  background: var(--field);
  color: var(--text);
  padding: 8px 10px;
}
input:focus, select:focus, textarea:focus {
  outline: none;
  border-color: var(--prim);
  box-shadow: 0 0 0 1px var(--prim);
}
button { cursor: pointer; }
button.primary { background: var(--prim); border-color: transparent; color: #001019; font-weight: 600; }
::placeholder { color: var(--text-muted); opacity: 1; }

/* Autofill (Chrome) */
input:-webkit-autofill {
  -webkit-text-fill-color: var(--text) !important;
  -webkit-box-shadow: 0 0 0 1000px var(--field) inset !important;
}

/* ---------- Tables ---------- */
table { width: 100%; border-collapse: collapse; background: var(--card); border-radius: 14px; overflow: hidden; }
th, td { padding: 12px; border-bottom: 1px solid var(--line); text-align: left; font-size: 14px; color: var(--text); }
tr:last-child td { border-bottom: none; }

/* ---------- iOS-style Switch ---------- */
.switch {
  --h: 22px; --w: 42px; --pad: 3px; --on: var(--prim); --off: color-mix(in srgb, var(--line) 70%, transparent);
  position: relative; display: inline-flex; width: var(--w); height: var(--h);
  align-items: center; border-radius: calc(var(--h) / 2);
  background: var(--off); transition: background .2s ease; cursor: pointer;
  box-shadow: inset 0 0 0 1px var(--line);
}
.switch input { position: absolute; inset: 0; opacity: 0; cursor: pointer; }
.switch .knob {
  position: absolute; left: var(--pad); top: var(--pad);
  width: calc(var(--h) - var(--pad) * 2); height: calc(var(--h) - var(--pad) * 2);
  background: #fff; border-radius: 999px; transition: transform .2s ease, box-shadow .2s ease;
  box-shadow: 0 1px 2px rgba(0,0,0,.5);
}
.switch:has(input:checked) { background: var(--on); box-shadow: inset 0 0 0 1px rgba(255,255,255,.06); }
.switch:has(input:checked) .knob { transform: translateX(calc(var(--w) - var(--h))); }
.switch:has(input:focus-visible) { outline: 2px solid var(--prim); outline-offset: 3px; }
.switch.disabled { opacity: .5; cursor: not-allowed; }

/* ---------- Classic checkboxes/radios (fallback) ---------- */
input[type="checkbox"], input[type="radio"] { accent-color: var(--prim); width: 16px; height: 16px; cursor: pointer; }
label:has(input[type="checkbox"]), label:has(input[type="radio"]) { display: inline-flex; align-items: center; gap: 8px; cursor: pointer; }
